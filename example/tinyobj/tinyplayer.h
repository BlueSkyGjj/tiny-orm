
// MIT License
// 
// Copyright (c) 2017 david++
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

//
// !!NOTICE: This file is generated by TOOL, DON'T EDIT!. (by david++)")
//
#ifndef __TINYOBJ_TINYPLAYER__
#define __TINYOBJ_TINYPLAYER__

#include "tinyobj.h"

namespace tiny {

//
// 好友
//
struct Friend {
     //
     // Serialization Support
     //
     std::string serialize() const;
     bool deserialize(const std::string &data);
     
     // 标识符
     uint32_t id = 0;
     // 名字
     std::string name;
};

//
// 国家
//
struct Country {
     //
     // Serialization Support
     //
     std::string serialize() const;
     bool deserialize(const std::string &data);
     
     // 标识符
     uint32_t id = 0;
     // 名字
     std::string name;
};

//
// 角色信息
//
struct Player {
     //
     // Serialization Support
     //
     std::string serialize() const;
     bool deserialize(const std::string &data);
     
     // 标识符
     uint32_t id = 0;
     // 名字
     std::string name = "david";
     // 国家信息
     Country country;
     // 朋友列表
     std::vector<Friend> friends;
     int8_t m_int8 = 22;
     int16_t m_int16 = 0;
     int32_t m_int32 = 0;
     int64_t m_int64 = 0;
     uint8_t m_uint8 = 0;
     uint16_t m_uint16 = 0;
     uint32_t m_uint32 = 0;
     uint64_t m_uint64 = 0;
     float m_float = 0;
     double m_double = 0;
     bool m_bool = 0;
     std::string m_string;
     std::string m_bytes;
     std::string m_bytes_tiny;
     std::string m_bytes_medium;
     std::string m_bytes_long;
};
} // namespace tiny
#endif // __TINYOBJ_TINYPLAYER__
